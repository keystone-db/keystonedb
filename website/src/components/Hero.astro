---
import { ArrowRight, Github, Download } from 'lucide-react';
---

<section class="relative overflow-hidden bg-gradient-to-br from-white via-blue-50 to-purple-50 dark:from-slate-900 dark:via-slate-800 dark:to-slate-900 py-20 sm:py-32">
  <!-- Background decoration -->
  <div class="absolute inset-0 opacity-30 dark:opacity-10">
    <div class="absolute top-0 -left-4 w-72 h-72 bg-purple-300 rounded-full mix-blend-multiply filter blur-xl animate-blob"></div>
    <div class="absolute top-0 -right-4 w-72 h-72 bg-blue-300 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-2000"></div>
    <div class="absolute -bottom-8 left-20 w-72 h-72 bg-pink-300 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-4000"></div>
  </div>

  <div class="relative container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="grid lg:grid-cols-2 gap-12 items-center">
      <!-- Content -->
      <div class="space-y-8">
        <div class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 text-sm font-medium">
          <span class="relative flex h-2 w-2">
            <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary-400 opacity-75"></span>
            <span class="relative inline-flex rounded-full h-2 w-2 bg-primary-500"></span>
          </span>
          Open Source â€¢ MIT/Apache-2.0
        </div>

        <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-slate-900 dark:text-white leading-tight">
          DynamoDB-Style Database
          <span class="text-transparent bg-clip-text bg-gradient-to-r from-primary-600 to-accent-600 dark:from-primary-400 dark:to-accent-400">
            Embedded in Rust
          </span>
        </h1>

        <p class="text-xl text-slate-600 dark:text-slate-300 max-w-2xl">
          Single-file, ACID-compliant storage with familiar DynamoDB API, PartiQL support, and local-first performance.
          Perfect for desktop apps, edge computing, and offline-first applications.
        </p>

        <!-- Key Metrics -->
        <div class="grid grid-cols-3 gap-6 pt-4">
          <div>
            <div class="text-3xl font-bold text-primary-600 dark:text-primary-400">50K</div>
            <div class="text-sm text-slate-600 dark:text-slate-400">writes/sec</div>
          </div>
          <div>
            <div class="text-3xl font-bold text-primary-600 dark:text-primary-400">100K+</div>
            <div class="text-sm text-slate-600 dark:text-slate-400">reads/sec</div>
          </div>
          <div>
            <div class="text-3xl font-bold text-primary-600 dark:text-primary-400">Zero</div>
            <div class="text-sm text-slate-600 dark:text-slate-400">dependencies</div>
          </div>
        </div>

        <!-- CTA Buttons -->
        <div class="flex flex-wrap gap-4">
          <a href="/docs" class="btn btn-primary">
            Get Started
            <ArrowRight className="w-5 h-5" />
          </a>
          <a href="/download" class="btn btn-outline">
            <Download className="w-5 h-5" />
            Download
          </a>
          <a href="https://github.com/keystonedb/keystonedb" target="_blank" rel="noopener noreferrer" class="btn btn-secondary">
            <Github className="w-5 h-5" />
            GitHub
          </a>
        </div>

        <!-- Quick Install -->
        <div class="pt-4">
          <p class="text-sm text-slate-600 dark:text-slate-400 mb-2">Quick install:</p>
          <div class="bg-slate-900 dark:bg-slate-950 rounded-lg p-4 font-mono text-sm">
            <code class="text-green-400">$</code> <code class="text-slate-300">cargo build --release</code>
          </div>
        </div>
      </div>

      <!-- Code Example -->
      <div class="card p-0 overflow-hidden">
        <div class="bg-slate-900 dark:bg-slate-950 p-4">
          <div class="flex items-center gap-2 mb-4">
            <div class="w-3 h-3 rounded-full bg-red-500"></div>
            <div class="w-3 h-3 rounded-full bg-yellow-500"></div>
            <div class="w-3 h-3 rounded-full bg-green-500"></div>
            <span class="ml-2 text-slate-400 text-sm font-mono">main.rs</span>
          </div>
          <pre class="!bg-transparent !my-0 text-sm overflow-x-auto"><code class="language-rust">use kstone_api::&#123;Database, ItemBuilder&#125;;

// Create database
let db = Database::create("mydb.keystone")?;

// Put an item
let item = ItemBuilder::new()
    .string("name", "Alice")
    .number("age", 30)
    .bool("active", true)
    .build();

db.put(b"user#123", item)?;

// Query with PartiQL
let results = db.query(
    "SELECT * FROM items WHERE pk = 'user#123'"
)?;

// Update with expressions
db.update(b"user#123", "SET age = age + 1")?;</code></pre>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  @keyframes blob {
    0%, 100% {
      transform: translate(0px, 0px) scale(1);
    }
    33% {
      transform: translate(30px, -50px) scale(1.1);
    }
    66% {
      transform: translate(-20px, 20px) scale(0.9);
    }
  }

  .animate-blob {
    animation: blob 7s infinite;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }

  .animation-delay-4000 {
    animation-delay: 4s;
  }
</style>
